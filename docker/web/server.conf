# An Effective Discussions virtual host, included by /etc/nginx/sites-available/*.conf.
#
# """You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# http://wiki.nginx.org/Pitfalls
# http://wiki.nginx.org/QuickStart
# http://wiki.nginx.org/Configuration """
#


# ----- HTTPS
#
# HTTPS public and private keys are located in /etc/letsencrypt/, and included
# not-from-this-file but from the sites-available/*.conf files.

#ssl_certificate...  – defined in sites-available/*.conf instead
# ssl_...  – defined in nginx.conf

# Magic files for generating HTTPS certificates with Let's Encrypt.
location /.well-known {
  alias /opt/nginx/html/.well-known;
  #autoindex off; – module disabled [5KUP293]
}

# Redirect to HTTPS.
#server {
#  listen 80;
#  # Use temp redirect (302) not permanent (301) in case I'll need to revert to http
#  # for a short while in the future.
#  return 302 https://$host$request_uri;
#}


# ----- WebSocket and Long Polling
#
# This is for *subscribing* to events. *Publishing* events, however, is instead
# confiured in nginx.conf, and done on port 81 (not 80 or 443).

location /-/pubsub/subscribe/ {
  location ~ /-/pubsub/subscribe/(.*)$ {
    nchan_subscriber;
    nchan_channel_id "$1";
    nchan_subscriber_first_message newest;

    # Ask the appserver if this is okay, and in that way also tell it that this user
    # has now connected. (Apparently nchan forwards all cookies to the appserver.)
    # (Any '?' here gets url encoded and then no endpoint matches
    # so the app server replies 404 Not Found. So don't use the query string here.)
    nchan_authorize_request /-/pubsub/authorize-subscriber/$1;
  }
}


# ----- The Play Framework application server

location / {
  proxy_http_version 1.1;
  # The docker host has ip 172.17.0.1, for me. (also see [7YKFG32] below)
  # Read more here: https://docs.docker.com/v1.7/articles/networking/
  # and: https://github.com/docker/docker/issues/17305
  # and: http://stackoverflow.com/a/31213387/694469
  # ... Use Docker networking instead and hostname 'app'.
  proxy_pass http://app:9000/;

  # $host = the first servername, no port number.
  # $http_host = the Host header, if any.
  proxy_set_header Host  $http_host;
  # 16 random bytes.
  proxy_set_header X-Request-Id $request_id; # COULD update e2e test [5FK02FP]
  # If there are even more reverse proxies in front:
  #proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
  # If there are not:
  proxy_set_header X-Forwarded-For    $remote_addr;
  proxy_set_header X-Forwarded-Proto  $scheme;
  proxy_connect_timeout  900;
  proxy_send_timeout     900;
  proxy_read_timeout     900;
  send_timeout           900;

  location ~ ^(/-/site/|/-/assets/|/favicon.ico) {  # ? BUG why not max-age 1 year, only 1 h ???
    proxy_pass http://app:9000$request_uri;
    proxy_cache EfDiCache;
    proxy_cache_valid  200 302   7d; # d = days
    proxy_cache_valid  404      10m; # m = minutes not months
    proxy_cache_key $request_uri;    # is like: '/-/assets/123/script.js' (no hostname included)
    add_header X-Cache-Status $upstream_cache_status;
  }
}

# If the app server isn't running, we'll show friendly instructions about how to start it.
location /502.html{
  root /opt/nginx/html/;
}


# ----- Uploads

# The app server saves uploads to the directory indicated below, and here we configure Nginx
# to serve them directly from the file system.

# /-/u/ is the new uploads path — because it's shorter than the old, /-/uploads/public/.
# and will be included many many times in the generated html (not always compressed).
# Why won't this work: location ~ ^/-/(u|uploads/public)/ {
#  just --> 403 Forbidden. Instead, split in 2 locations:  [6FKW24]
location /-/u/ {  # location one  [6FKW24]
  # Dupl code, see /-/uploads/public/ below.
  # This dir is read-only mounted in the relevant docker-compose.yml, in the Nginx
  # container, and read-write mounted in the Play app container.
  alias /opt/ed/uploads/public/;
  # access_log off; enable for now so I'll notice if Google's CDN doesn't cache this
  # autoindex off; – module disabled [5KUP293]
  expires 31d;  # apparently adds 'max-age=...' too. Later, could change to 365d.
  # The Google Cloud Engine CDN wants this header.
  add_header Cache-Control public;

  # sendfile, tcp_nopush, tcp_nodelay already configured in nginx.conf.

  location ~ \.(mp4|m4v|m4a)$ {
    mp4;
  }
  # (could: ~ .mp4.(m3u8|ts)$ { hls; }
  # ngx_http_hls_module & _f4f_ = commercial though)
}

location /-/uploads/public/ {  # location two [6FKW24]
  # Dupl code, see /-/u/ above.
  alias /opt/ed/uploads/public/;
  expires 31d;
  add_header Cache-Control public;
  location ~ \.(mp4|m4v|m4a)$ {
    mp4;
  }
}


# ----- Ping pong

location /-/ping-nginx {
  return 200 'pong';
  add_header Content-Type text/plain;
}

# vim: et ts=2 sw=2 tw=0 list
